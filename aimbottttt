local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "No Big Deal | by DzHub",
    SubTitle = "by dexz0",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.RightShift
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    ESP = Window:AddTab({ Title = "ESP", Icon = "" }), -- Nova aba para ESP
}

-- Variáveis de controle do aimbot
local aimbotEnabled = false
local espEnabled = false
local fovEnabled = false
local fovSize = 100
local espInstance = nil -- Para armazenar o BillboardGui do ESP
local smoothness = 4
local sensitivity = 8
local fovCircle = nil -- Círculo do FOV

-- Criação do círculo FOV
local function createFOVCircle()
    if not fovCircle then
        fovCircle = Drawing.new("Circle")
        fovCircle.Visible = false
        fovCircle.Radius = fovSize
        fovCircle.Color = Color3.new(1, 1, 1) -- Branco
        fovCircle.Thickness = 2
        fovCircle.Filled = false
    end
end

createFOVCircle()

-- Atualiza a posição do círculo na tela
local function updateFOVCircle()
    if fovCircle and fovEnabled then
        local mouseLocation = game:GetService("UserInputService"):GetMouseLocation()
        fovCircle.Position = Vector2.new(mouseLocation.X, mouseLocation.Y)
        fovCircle.Radius = fovSize
        fovCircle.Visible = true
    elseif fovCircle then
        fovCircle.Visible = false
    end
end

-- Função para encontrar o jogador mais próximo dentro do FOV
local function getClosestTarget()
    local player = game.Players.LocalPlayer
    local camera = workspace.CurrentCamera
    local closestTarget = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Humanoid") and otherPlayer.Character.Humanoid.Health > 0 then
            local head = otherPlayer.Character:FindFirstChild("Head")
            if head then
                local screenPosition, onScreen = camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local mousePosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
                    local distance = (mousePosition - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude
                    if distance < shortestDistance and distance <= fovSize then
                        -- Verificando se o alvo está visível (não bloqueado por obstáculos)
                        local ray = Ray.new(camera.CFrame.Position, head.Position - camera.CFrame.Position)
                        local hit, position = workspace:FindPartOnRay(ray, player.Character)
                        if not hit or hit:IsDescendantOf(otherPlayer.Character) then
                            shortestDistance = distance
                            closestTarget = head
                        end
                    end
                end
            end
        end
    end

    return closestTarget
end

-- Função para mover o mouse suavemente em direção ao alvo
local function moveMouseSmoothly(target)
    if target then
        local camera = workspace.CurrentCamera
        local targetScreenPosition = camera:WorldToViewportPoint(target.Position)
        local mousePosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
        local targetPosition = Vector2.new(targetScreenPosition.X, targetScreenPosition.Y)

        local delta = (targetPosition - mousePosition)
        local adjustedDelta = delta / sensitivity * smoothness

        -- Garante que o movimento do mouse seja suave
        if math.abs(adjustedDelta.X) > 0.5 or math.abs(adjustedDelta.Y) > 0.5 then
            mousemoverel(adjustedDelta.X, adjustedDelta.Y)
        end
    end
end

-- Loop do aimbot
local function aimbotLoop()
    while true do
        if aimbotEnabled then
            local target = getClosestTarget()
            if target then
                moveMouseSmoothly(target)
            end
        end
        updateFOVCircle() -- Atualiza a posição do FOV na tela
        wait(0.01) -- Ajuste a velocidade do loop
    end
end

-- Inicia o loop do aimbot em uma nova thread
spawn(aimbotLoop)

-- Função para criar ou remover o ESP no objeto Disk
local function toggleESP(enabled)
    local disk = workspace:FindFirstChild("Disk")
    if enabled and disk then
        -- Cria o ESP se estiver ativado
        if not espInstance then
            espInstance = Instance.new("BillboardGui")
            espInstance.Adornee = disk
            espInstance.Size = UDim2.new(5, 0, 5, 0)
            espInstance.StudsOffset = Vector3.new(0, 3, 0)
            espInstance.AlwaysOnTop = true
            espInstance.Parent = game.CoreGui

            local label = Instance.new("TextLabel", espInstance)
            label.Text = "Disk"
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.new(1, 0, 0)
            label.TextScaled = true
        end
    elseif espInstance then
        -- Remove o ESP se estiver desativado
        espInstance:Destroy()
        espInstance = nil
    end
end

-- Adiciona um Toggle no Fluent para ativar/desativar o aimbot
local ToggleAimbot = Tabs.Main:AddToggle("AimbotToggle", { Title = "Enable Aimbot", Default = false })

ToggleAimbot:OnChanged(function()
    aimbotEnabled = ToggleAimbot.Value
    print("Aimbot enabled:", aimbotEnabled)
end)

-- Adiciona um Toggle no Fluent para ativar/desativar o ESP
local ToggleESP = Tabs.Main:AddToggle("ESPToggle", { Title = "Enable ESP for Disk", Default = false })

ToggleESP:OnChanged(function()
    espEnabled = ToggleESP.Value
    toggleESP(espEnabled)
    print("ESP for Disk enabled:", espEnabled)
end)

-- Adiciona um Toggle para ativar/desativar o FOV
local ToggleFOV = Tabs.Main:AddToggle("FOVToggle", { Title = "Enable FOV", Default = false })

ToggleFOV:OnChanged(function()
    fovEnabled = ToggleFOV.Value
    print("FOV enabled:", fovEnabled)
end)

-- Adiciona um Slider para ajustar o tamanho do FOV
local FOVSlider = Tabs.Main:AddSlider("FOVSize", {
    Title = "FOV Size",
    Description = "Adjust the size of the FOV",
    Default = 100,
    Min = 50,
    Max = 300,
    Rounding = 0,
    Callback = function(Value)
        fovSize = Value
        print("FOV size set to:", fovSize)
    end
})

-- Adiciona um Slider para ajustar a sensibilidade
local SensitivitySlider = Tabs.Main:AddSlider("SensitivitySlider", {
    Title = "Sensitivity",
    Description = "Adjust the sensitivity of the aimbot",
    Default = sensitivity, -- Valor inicial
    Min = 0.1, -- Valor mínimo
    Max = 5, -- Valor máximo
    Rounding = 1, -- Casas decimais
    Callback = function(value)
        sensitivity = value -- Atualiza a variável de sensibilidade
        print("Sensitivity set to:", sensitivity)
    end
})

-- Adiciona um Slider para ajustar a suavidade
local SmoothnessSlider = Tabs.Main:AddSlider("SmoothnessSlider", {
    Title = "Smoothness",
    Description = "Adjust the smoothness of the aimbot",
    Default = smoothness, -- Valor inicial
    Min = 1, -- Valor mínimo
    Max = 10, -- Valor máximo
    Rounding = 1, -- Casas decimais
    Callback = function(value)
        smoothness = value -- Atualiza a variável de suavidade
        print("Smoothness set to:", smoothness)
    end
})


-- Variáveis do ESP (Desativadas por padrão)
local GlowESPEnabled = false
local NameESPEnabled = false
local LineESPEnabled = false
local GlowESPColor = Color3.fromRGB(0, 255, 0)
local NameESPColor = Color3.fromRGB(255, 255, 255)
local LineESPColor = Color3.fromRGB(255, 0, 0)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Lines = {}
local Names = {}

-- Função para criar o Glow ESP
local function createGlow(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    if not player.Character:FindFirstChild("GlowESP") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "GlowESP"
        highlight.Adornee = player.Character
        highlight.FillColor = GlowESPColor
        highlight.OutlineColor = Color3.new(1, 1, 1) -- Cor do contorno
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0.1
        highlight.Parent = player.Character
    end
end

-- Função para remover Glow ESP
local function removeGlow(player)
    if player.Character and player.Character:FindFirstChild("GlowESP") then
        player.Character.GlowESP:Destroy()
    end
end

-- Função para criar Nome ESP
local function createName(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    if not Names[player] then
        local nameTag = Drawing.new("Text")
        nameTag.Visible = true
        nameTag.Center = true
        nameTag.Outline = true
        nameTag.Size = 18
        nameTag.Color = NameESPColor
        Names[player] = nameTag
    end
end

-- Função para remover Nome ESP
local function removeName(player)
    if Names[player] then
        Names[player]:Remove()
        Names[player] = nil
    end
end

-- Função para criar Linha ESP (Tracer)
local function createTracer(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    if not Lines[player] then
        local tracerLine = Drawing.new("Line")
        tracerLine.Thickness = 2
        tracerLine.Color = LineESPColor
        tracerLine.Visible = true
        Lines[player] = tracerLine
    end
end

-- Função para remover Linha ESP (Tracer)
local function removeTracer(player)
    if Lines[player] then
        Lines[player]:Remove()
        Lines[player] = nil
    end
end

-- Função para atualizar Glow ESP para todos os jogadores
local function updateGlowESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if GlowESPEnabled then
            if player ~= LocalPlayer then
                createGlow(player)
            end
        else
            removeGlow(player)
        end
    end
end

-- Função para atualizar Nome ESP para todos os jogadores
local function updateNameESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if NameESPEnabled then
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                if not Names[player] then
                    createName(player)
                end
                local head = player.Character.Head
                local headPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(head.Position)
                local nameTag = Names[player]
                if nameTag then
                    if onScreen then
                        nameTag.Position = Vector2.new(headPos.X, headPos.Y - 40)
                        nameTag.Size = 22
                        nameTag.Text = player.Name
                        nameTag.Visible = true
                    else
                        nameTag.Visible = false
                    end
                end
            else
                removeName(player)
            end
        else
            removeName(player)
        end
    end
end

-- Função para atualizar Linha ESP (Tracer) para todos os jogadores
local function updateLineESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if LineESPEnabled then
            if player ~= LocalPlayer then
                if not Lines[player] then
                    createTracer(player)
                end
            end

            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and Lines[player] then
                local rootPart = player.Character.HumanoidRootPart
                local rootPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)

                if onScreen then
                    Lines[player].From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
                    Lines[player].To = Vector2.new(rootPos.X, rootPos.Y)
                    Lines[player].Visible = true
                else
                    Lines[player].Visible = false
                end
            elseif Lines[player] then
                Lines[player].Visible = false
            end
        else
            if Lines[player] then
                Lines[player]:Remove()
                Lines[player] = nil
            end
        end
    end
end

-- Atualiza ESPs em tempo real
game:GetService("RunService").RenderStepped:Connect(function()
    updateNameESP()
    updateLineESP()
end)

-- Conexão para novos jogadores
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        updateGlowESP()
        updateNameESP()
        updateLineESP()
    end)
end)

-- ESP Toggles e Cores na aba ESP
Tabs.ESP:AddToggle("GlowESPToggle", { Title = "Enable Glow ESP", Default = false })
    :OnChanged(function(state)
        GlowESPEnabled = state
        updateGlowESP()
    end)

Tabs.ESP:AddToggle("NameESPToggle", { Title = "Enable Name ESP", Default = false })
    :OnChanged(function(state)
        NameESPEnabled = state
        updateNameESP()
    end)

Tabs.ESP:AddToggle("LineESPToggle", { Title = "Enable Line ESP", Default = false })
    :OnChanged(function(state)
        LineESPEnabled = state
        updateLineESP()
    end)

Tabs.ESP:AddColorpicker("GlowColorPicker", {
    Title = "Glow ESP Color",
    Default = GlowESPColor,
}):OnChanged(function(color)
    GlowESPColor = color
    updateGlowESP() -- Atualiza a cor do Glow ESP dinamicamente
end)

Tabs.ESP:AddColorpicker("NameColorPicker", {
    Title = "Name ESP Color",
    Default = NameESPColor,
}):OnChanged(function(color)
    NameESPColor = color
    updateNameESP() -- Atualiza a cor do Name ESP dinamicamente
end)

Tabs.ESP:AddColorpicker("LineColorPicker", {
    Title = "Line ESP Color",
    Default = LineESPColor,
}):OnChanged(function(color)
    LineESPColor = color
    updateLineESP() -- Atualiza a cor do Line ESP dinamicamente
end)

-- Variáveis do ESP
local ESPEnabled = false  -- Inicialmente o ESP está desativado
local Lines = {}  -- Guarda os traços de ESP

-- Função para verificar se o jogador está no time inimigo
local function isEnemy(player)
    if player.Team ~= game.Players.LocalPlayer.Team then
        return true
    end
    return false
end

-- Função para criar um ESP de linha (Tracer)
local function createLineESP(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local tracerLine = Drawing.new("Line")
        tracerLine.Thickness = 2
        tracerLine.Color = Color3.fromRGB(255, 0, 0)  -- Cor vermelha para inimigos
        tracerLine.Visible = true
        Lines[player] = tracerLine
    end
end

-- Função para atualizar o ESP
local function updateESP()
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and isEnemy(player) then
            if ESPEnabled then
                -- Ativa o ESP para jogadores inimigos
                if not Lines[player] then
                    createLineESP(player)
                end
            else
                -- Remove o ESP para jogadores se o toggle estiver desativado
                if Lines[player] then
                    Lines[player]:Remove()
                    Lines[player] = nil
                end
            end
        else
            -- Remove o ESP para o próprio jogador ou jogadores do mesmo time
            if Lines[player] then
                Lines[player]:Remove()
                Lines[player] = nil
            end
        end
    end
end

-- Adicionando o Toggle para ativar ou desativar o ESP
local ToggleESP = Tabs.ESP:AddToggle("ToggleESP", {
    Title = "Enable ESP for Enemies",
    Default = false  -- Começa desativado
})

-- Função que será chamada quando o toggle for alterado
ToggleESP:OnChanged(function()
    ESPEnabled = ToggleESP.Value
    updateESP()  -- Atualiza o ESP quando o toggle for ativado/desativado
    print("ESP enabled:", ESPEnabled)
end)

-- Atualiza o ESP sempre que um jogador for adicionado ou quando o time mudar
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        updateESP()
    end)
end)

-- Atualiza o ESP a cada quadro (RenderStepped) durante o jogo
game:GetService("RunService").RenderStepped:Connect(function()
    updateESP()
end)
