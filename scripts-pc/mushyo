
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

-- Criar uma parte (plataforma) e definir propriedades
local part = Instance.new("Part")
part.Name = "HiddenPlatform"
part.Size = Vector3.new(10, 1, 10) -- Ajuste o tamanho se quiser
part.Anchored = true
part.CanCollide = true
part.Position = Vector3.new(hrp.Position.X, -500, hrp.Position.Z) -- Ajuste a altura aqui
part.Parent = workspace

-- Teleportar o jogador para cima da plataforma
hrp.CFrame = CFrame.new(part.Position + Vector3.new(0, part.Size.Y/2 + 5, 0))
print("teleportado")

wait(2)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
Fluent:Notify({
    Title = "",
    Content = "by tecleino || o melhor do momento",
    Duration = 5
})

local diamantes = game:GetService("Players").LocalPlayer.FishingItems.Diamond.Value
Fluent:Notify({
    Title = "Inventário",
    Content = "Diamantes: " .. diamantes,
    Duration = 5
})

local peixe = game:GetService("Players").LocalPlayer.FishingItems.Fish.Value
Fluent:Notify({
    Title = "Inventário",
    Content = "Peixes: " .. peixe,
    Duration = 5
})

local lixo = game:GetService("Players").LocalPlayer.FishingItems.Trash.Value
Fluent:Notify({
    Title = "Inventário",
    Content = "Lixo: " .. lixo,
    Duration = 5
})

wait(1)

print("tudo certo por aqui")

local function executarParteInferior()
    while true do
        local success, err = pcall(function()
            local player = game.Players.LocalPlayer
            local fishingRod = player.Backpack:FindFirstChild("Fishing Rod")

            -- Função para pegar a vara
            local function equipFishingRod()
                if fishingRod then
                    -- Equipando a vara de pescar
                    fishingRod.Parent = player.Character
                    fishingRod.Handle.Anchored = false  -- Certifique-se de que a vara não esteja ancorada
                    print("Vara de pescar equipada!")
                else
                    warn("Vara de pescar não encontrada no Backpack!")
                end
            end

            -- Chama a função para equipar a vara
            equipFishingRod()

            local args = {
                [1] = {
                    ["destiny"] = Vector3.new(-291.2904052734375, 26, -81.78752899169922),
                    ["whatToDo"] = "CreateBuoy"
                }
            }

            game:GetService("Players").LocalPlayer.Character:FindFirstChild("Fishing Rod").RemoteEvent:FireServer(unpack(args))

            local args = {
                [1] = {
                    ["whatToDo"] = "Fish"
                }
            }

            game:GetService("Players").LocalPlayer.Character:FindFirstChild("Fishing Rod").RemoteEvent:FireServer(unpack(args)) 

            local player = game.Players.LocalPlayer

            -- Função para reiniciar o jogo
            local function rejoinGame()
                -- Aguarda 3 segundos antes de fazer o rejoin
                wait(3)
                
                -- Recarrega o jogo
                game:GetService("TeleportService"):Teleport(game.PlaceId, player)
            end

            -- Aciona o rejoin
            rejoinGame()
        end)

        if success then
            break -- Se não houver erro, sai do loop
        else
            warn("Erro encontrado: " .. err .. " - Tentando novamente em 1 segundo...")
            wait(1) -- Aguarda 1 segundo antes de tentar novamente
        end
    end
end

executarParteInferior()
