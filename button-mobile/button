local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

-- Remove instância anterior
local ExistingGui = CoreGui:FindFirstChild("MinimizeButtonGui")
if ExistingGui then ExistingGui:Destroy() end

-- Procura a GUI principal
local ScreenGuiToMinimize
for _, gui in ipairs(CoreGui:GetChildren()) do
    if gui:IsA("ScreenGui") then
        for _, descendant in ipairs(gui:GetDescendants()) do
            if descendant:IsA("TextLabel") and descendant.Text == "Bubble Gum Simulator INFINITY | DZ HUB" then
                ScreenGuiToMinimize = gui
                break
            end
        end
    end
    if ScreenGuiToMinimize then break end
end

if not ScreenGuiToMinimize then
    warn("ScreenGui com o texto especificado não encontrado.")
    return
end

-- Cria GUI do botão
local MinimizeGui = Instance.new("ScreenGui", CoreGui)
MinimizeGui.Name = "MinimizeButtonGui"

local MinimizeButton = Instance.new("ImageButton", MinimizeGui)
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 50, 0, 50)
MinimizeButton.Position = UDim2.new(0.1, 0, 0.1, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.ImageRectSize = Vector2.new(256, 256)

local UICorner = Instance.new("UICorner", MinimizeButton)

-- Animação do botão com múltiplas spritesheets
local spritesheets = {
    "rbxassetid://90726870075493",
    "rbxassetid://85859195506939",
    "rbxassetid://140138471003989",
    "rbxassetid://92694094525674"
}

local frameWidth, frameHeight = 256, 256
local framesPerSheet = 4
local totalFrames = #spritesheets * framesPerSheet
local currentFrame = 0

MinimizeButton.Image = spritesheets[1]

task.spawn(function()
    while true do
        currentFrame = (currentFrame + 1) % totalFrames
        local sheetIndex = math.floor(currentFrame / framesPerSheet) + 1
        local frameIndex = currentFrame % framesPerSheet

        MinimizeButton.Image = spritesheets[sheetIndex]
        MinimizeButton.ImageRectOffset = Vector2.new(frameIndex * frameWidth, 0)

        task.wait(0.01) -- ajuste de velocidade
    end
end)

-- Função de minimizar
MinimizeButton.MouseButton1Click:Connect(function()
    if ScreenGuiToMinimize then
        ScreenGuiToMinimize.Enabled = not ScreenGuiToMinimize.Enabled
    end
end)

-- Movimento do botão
local dragging = false
local dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    MinimizeButton.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

MinimizeButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MinimizeButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MinimizeButton.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)
